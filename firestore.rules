rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isUser(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }
    
    function isProfileOwner(userId) {
      return isUser(userId);
    }

    // Users Collection
    // - Anyone can read public user profiles.
    // - Authenticated users can create their own profile.
    // - A user can only update their own profile.
    // - A user can update another user's 'followers' list (to follow/unfollow them).
    match /users/{userId} {
      allow read: if true;
      allow create: if isUser(userId);
      allow update: if isProfileOwner(userId) || (isSignedIn() && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['followers']));
    }

    // Posts Collection
    // - Anyone can read published posts.
    // - Authenticated users can create posts.
    // - A user can only update or delete their own posts.
    match /posts/{postId} {
      allow read: if resource.data.status == 'published';
      allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
      allow update, delete: if isSignedIn() && resource.data.userId == request.auth.uid;
    }

    // Stories Collection
    // - Anyone can read published stories.
    // - Authenticated users can create stories for themselves.
    // - Users can only update/delete their own stories.
    match /stories/{storyId} {
        allow read: if resource.data.status == 'published';
        allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
        allow update, delete: if isSignedIn() && resource.data.userId == request.auth.uid;
    }

    // Activity Collection
    // - Only the notified user can read their activity.
    // - Authenticated users can create activity entries (e.g., likes, comments, follows).
    match /activity/{activityId} {
      allow read: if isSignedIn() && resource.data.notifiedUserId == request.auth.uid;
      allow create: if isSignedIn() && request.resource.data.actorId == request.auth.uid;
      allow update: if isSignedIn() && resource.data.notifiedUserId == request.auth.uid && request.resource.data.read == true;
    }

    // Conversations & Messages
    // - Users can only read conversations they are a part of.
    // - Users can only write messages to conversations they are a part of.
    match /conversations/{conversationId} {
      allow read, create: if isSignedIn() && request.auth.uid in resource.data.userIds;
      allow update: if isSignedIn() && request.auth.uid in resource.data.userIds;

      match /messages/{messageId} {
        allow read, create: if isSignedIn() && request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.userIds;
      }
    }
  }
}
